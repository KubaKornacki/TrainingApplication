@model App_v2.ViewModel.FormViewModel
@{
    ViewData["Title"] = "Generator trenigów";
 }


<div class="jumbotron col-md-6">
    <h1>@ViewData["Title"]</h1>
    <div class="row">
        <div class="col-md-8">
            <form asp-action="Form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group" style="display:none">
                    <input asp-for="Form.ID" class="form-control" />
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => Model.Form.GoalID, "Cel", htmlAttributes: new { @class = "control-label col-md-8" })
                    @Html.DropDownListFor(x => Model.Form.GoalID, new SelectList(Model.Goal, "Value", "Text"), htmlAttributes: new { @class = "form-control col-md-8", id = "Goal" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => Model.Form.FreeTimeID, "Czas na treningi", htmlAttributes: new { @class = "control-label col-md-8" })
                    @Html.DropDownListFor(x => Model.Form.FreeTimeID, new SelectList(Model.FreeTime, "Value", "Text"), htmlAttributes: new { @class = "form-control col-md-8", id = "FreeTime" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => Model.Form.TrainingCategoryID, "Priorytet", htmlAttributes: new { @class = "control-label col-md-8" })
                    @Html.DropDownListFor(x => Model.Form.TrainingCategoryID, new SelectList(Model.TrainingCategory, "Value", "Text"), htmlAttributes: new { @class = "form-control col-md-8", id = "TrainingCategory" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Zapisz" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
    <div>
        <a asp-action="Index">Powrót do strony głównej</a>
    </div>


</div>